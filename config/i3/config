# |_ _|___ /            ___ ___  _ __  / _(_) __ _
#  | |  |_ \   _____   / __/ _ \| '_ \| |_| |/ _` |
#  | | ___) | |_____| | (_| (_) | | | |  _| | (_| |
# |___|____/           \___\___/|_| |_|_| |_|\__, |
#                                             |___/
#

# Please see http://i3wm.org/docs/userguide.html for a complete reference!

##########################
#
#
#    Basic
#
##########################
# Set mod key (Shift=<Alt>, Mod4=<Super>)
		set $mod Mod4


##########################
#
#    Theme
#
##########################
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft: SF Pro Display 8

# title_alignment left|center|right
title_align center

# Drawing marks on window decoration
show_marks yes

# Title Format
for_window [class=".*"] title_format "%title"

# Theme colors
client.focused     #ECECEC      #414941     #FAFAFA    #ECECEC       #ECECEC
client.focused_inactive   #ECECEC     #ECECEC    #171717     #ECECEC       #ECECEC
client.unfocused   #ECECEC      #CACACA    #171717     #ECECEC       #ECECEC
client.urgent           #ffffff            #ffffff        #ffffff        #268BD2
client.placeholder      #000000            #909090        #FFFFFF        #268BD2


##########################
#
#    System functions
#
##########################

# Screenshot
bindsym --release Print exec "~/.scripts/screenshot"

bindsym --release $mod+Print exec --no-startup-id "flameshot gui"

# 设置锁屏
bindsym $mod+l exec --no-startup-id "~/.scripts/lock"


# Sound-section controls
bindsym XF86AudioMute  exec "~/.scripts/ctrl_volume mute"
bindsym XF86AudioRaiseVolume exec "~/.scripts/ctrl_volume up"
bindsym XF86AudioLowerVolume exec "~/.scripts/ctrl_volume down"

# Screen brightness controls
bindsym XF86MonBrightnessDown exec "~/.scripts/ctrl_light down"
bindsym XF86MonBrightnessUp exec "~/.scripts/ctrl_light up"


# 无操作十分钟锁屏
exec --no-startup-id xautolock -time 10 -locker "~/.scripts/lock"  -corners ----  -cornerdelay 5 -cornerredelay 5 -cornersize 10
exec --no-startup-id "~/.scripts/lightsOn.sh"

##########################
#
#    Applications
#
##########################
# Start applications
bindsym $mod+Return exec alacritty
bindsym $mod+t exec alacritty
# Assign applications on specific workspaces
# assign [class="Emacs"] $ws1

# Autostart applications
exec --no-startup-id "picom --experimental-backends"
exec --no-startup-id fcitx
exec --no-startup-id copyq
exec --no-startup-id "libinput-gestures-setup start"
exec --no-startup-id dunst
exec_always  --no-startup-id "~/.config/polybar/launch.sh"
exec --no-startup-id nm-applet
exec --no-startup-id flameshot
exec --no-startup-id "~/.scripts/setWallpaper"
exec --no-startup-id xset dpms 300
# Specific applications configration

# Rofi
bindsym $mod+d exec --no-startup-id "rofi -show drun -columns 1"

# Others
for_window [class="feh"] floating enable
for_window [class="Spotify"] floating enable
for_window [class="copyq"] floating enable
for_window [class="SpeedCrunch"] floating enable
for_window [class="ark"] floating enable


# keymap for spotify
bindsym $mod+n exec --no-startup-id "playerctl next"
bindsym $mod+p exec --no-startup-id "playerctl previous"
bindsym $mod+s exec --no-startup-id "playerctl play-pause"




##########################
#
#    i3 behaviour
#
##########################
# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>
# for_window [workspace=$ws1] layout tabbed

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus
focus_on_window_activation urgent
focus_follows_mouse no

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 0
new_float pixel 0

# Hide borders
hide_edge_borders both

# default apps

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# change focus
# focus_wrapping no

# alternatively, you can use the cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+i move left
bindsym $mod+Shift+n move down
bindsym $mod+Shift+o move right
bindsym $mod+Shift+p move up
bindsym $mod+Shift+c move position center

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes

# split orientation
bindsym $mod+h split h
bindsym $mod+v split v
bindsym $mod+q split toggle


# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
popup_during_fullscreen smart

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+shift+w layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Tab focus mode_toggle

# toggle sticky
bindsym $mod+Shift+t sticky toggle

# focus the parent container
bindsym $mod+a focus parent
bindsym $mod+backslash floating toggle

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# hide/unhide status bar
# bindsym $mod+h exec polybar-msg cmd toggle

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
# bindsym $mod+0 workspace $ws0
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
#bindsym $mod+9 workspace $ws8;[class=.*] scratchpad show

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8


# reload the configuration file
#bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -f 'pango: Monaco 10' -m 'Do you really want to exit i3?' -b 'Yes, exit i3' 'i3-msg exit'"

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window's width.
# Pressing right will grow the window's width.
# Pressing up will shrink the window's height.
# Pressing down will grow the window's height.
	bindsym l resize shrink width 5 px or 5 ppt
		bindsym f resize grow width 5 px or 5 ppt
		bindsym s resize shrink height 5 px or 5 ppt
		bindsym t resize grow height 5 px or 5 ppt

# same bindings, but for the arrow keys
		bindsym Left resize shrink width 5 px or 5 ppt
		bindsym Down resize grow height 5 px or 5 ppt
		bindsym Up resize shrink height 5 px or 5 ppt
		bindsym Right resize grow width 5 px or 5 ppt

# exit resize mode: Enter or Escape
		bindsym Return mode "default"
		bindsym Escape mode "default"
}

##########################
#
#    i3 gaps
#
##########################
# Set inner/outer gaps
gaps inner 7
gaps outer 2

# 设置圆角
# border_radius 8


# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# hide_edge_borders none
# smart_borders on

# focus_on_window_activation smart

set $mode_gaps Gaps: (o)uter, (i)nner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
	bindsym o      mode "$mode_gaps_outer"
		bindsym i      mode "$mode_gaps_inner"
		bindsym h      mode "$mode_gaps_horiz"
		bindsym v      mode "$mode_gaps_verti"
		bindsym t      mode "$mode_gaps_top"
		bindsym r      mode "$mode_gaps_right"
		bindsym b      mode "$mode_gaps_bottom"
		bindsym l      mode "$mode_gaps_left"
		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
	bindsym plus  gaps outer current plus 5
		bindsym minus gaps outer current minus 5
		bindsym 0     gaps outer current set 0

		bindsym Shift+plus  gaps outer all plus 5
		bindsym Shift+minus gaps outer all minus 5
		bindsym Shift+0     gaps outer all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
	bindsym plus  gaps inner current plus 5
		bindsym minus gaps inner current minus 5
		bindsym 0     gaps inner current set 0

		bindsym Shift+plus  gaps inner all plus 5
		bindsym Shift+minus gaps inner all minus 5
		bindsym Shift+0     gaps inner all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
